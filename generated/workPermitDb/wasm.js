
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.13.0
 * Query Engine version: 361e86d0ea4987e9f53a565309b3eed797a6bcbd
 */
Prisma.prismaVersion = {
  client: "6.13.0",
  engine: "361e86d0ea4987e9f53a565309b3eed797a6bcbd"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.Check_historiesScalarFieldEnum = {
  id: 'id',
  claim_id: 'claim_id',
  user_id: 'user_id',
  comment: 'comment',
  left_country: 'left_country',
  left_date: 'left_date',
  deported: 'deported',
  deport_decision_number: 'deport_decision_number',
  deport_decision_document_path: 'deport_decision_document_path',
  deport_date: 'deport_date',
  last_checked: 'last_checked',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Claim_deadlinesScalarFieldEnum = {
  id: 'id',
  claim_id: 'claim_id',
  structure_id: 'structure_id',
  sub_claim_id: 'sub_claim_id',
  deadline: 'deadline',
  is_active: 'is_active',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Claim_filesScalarFieldEnum = {
  id: 'id',
  claim_id: 'claim_id',
  user_id: 'user_id',
  type: 'type',
  path: 'path',
  active: 'active',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Claim_status_logsScalarFieldEnum = {
  id: 'id',
  claim_id: 'claim_id',
  user_id: 'user_id',
  structure_id: 'structure_id',
  from: 'from',
  to: 'to',
  comment: 'comment',
  from_cancel: 'from_cancel',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ClaimsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  vacancy_id: 'vacancy_id',
  in_progress_vacancy_id: 'in_progress_vacancy_id',
  employee_id: 'employee_id',
  eaeu_employee_id: 'eaeu_employee_id',
  eaeu_employee_family_member_id: 'eaeu_employee_family_member_id',
  type: 'type',
  ms_employee_id: 'ms_employee_id',
  ms_from_id: 'ms_from_id',
  ms_to_id: 'ms_to_id',
  flag: 'flag',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.CompaniesScalarFieldEnum = {
  id: 'id',
  legal_type_id: 'legal_type_id',
  tin: 'tin',
  name: 'name',
  type: 'type',
  address: 'address',
  actual_address: 'actual_address',
  email: 'email',
  telephone: 'telephone',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Company_info_logsScalarFieldEnum = {
  id: 'id',
  data: 'data',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Confidant_invitationsScalarFieldEnum = {
  id: 'id',
  company_id: 'company_id',
  email: 'email',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Contact_us_contentsScalarFieldEnum = {
  id: 'id',
  telephone: 'telephone',
  email: 'email',
  longitude: 'longitude',
  latitude: 'latitude',
  support_text_am: 'support_text_am',
  support_text_en: 'support_text_en',
  support_text_ru: 'support_text_ru',
  address_am: 'address_am',
  address_en: 'address_en',
  address_ru: 'address_ru',
  facebook_url: 'facebook_url',
  youtube_url: 'youtube_url',
  linkedin_url: 'linkedin_url'
};

exports.Prisma.CountriesScalarFieldEnum = {
  id: 'id',
  name_en: 'name_en',
  name_am: 'name_am',
  name_ru: 'name_ru',
  alpha_2: 'alpha_2',
  alpha_3: 'alpha_3',
  numeric: 'numeric',
  arm_short: 'arm_short',
  abbreviation_eng: 'abbreviation_eng',
  abbreviation_arm: 'abbreviation_arm',
  abbreviation_ru: 'abbreviation_ru',
  full_name_en: 'full_name_en',
  full_name_am: 'full_name_am',
  full_name_ru: 'full_name_ru',
  status: 'status',
  eaeu: 'eaeu',
  need_visa: 'need_visa',
  duration_of_stay_days: 'duration_of_stay_days'
};

exports.Prisma.Department_logsScalarFieldEnum = {
  id: 'id',
  claim_id: 'claim_id',
  user_id: 'user_id',
  structure_id: 'structure_id',
  status: 'status',
  path: 'path',
  comment: 'comment',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.DepartmentsScalarFieldEnum = {
  id: 'id',
  structure_id: 'structure_id',
  name: 'name'
};

exports.Prisma.Eaeu_employee_card_extension_request_deadlinesScalarFieldEnum = {
  id: 'id',
  structure_id: 'structure_id',
  eaeu_employee_card_extension_request_id: 'eaeu_employee_card_extension_request_id',
  deadline: 'deadline',
  is_active: 'is_active',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Eaeu_employee_card_extension_requestsScalarFieldEnum = {
  id: 'id',
  eaeu_employee_id: 'eaeu_employee_id',
  ms_card_id: 'ms_card_id',
  comment: 'comment',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Eaeu_employee_card_recovery_requestsScalarFieldEnum = {
  id: 'id',
  eaeu_employee_id: 'eaeu_employee_id',
  ms_card_id: 'ms_card_id',
  comment: 'comment',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Eaeu_employee_connect_family_membersScalarFieldEnum = {
  id: 'id',
  eaeu_employee_id: 'eaeu_employee_id',
  eaeu_employee_family_member_id: 'eaeu_employee_family_member_id',
  from: 'from',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Eaeu_employee_deadlinesScalarFieldEnum = {
  id: 'id',
  structure_id: 'structure_id',
  eaeu_employee_id: 'eaeu_employee_id',
  deadline: 'deadline',
  is_active: 'is_active',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Eaeu_employee_family_member_card_extension_request_deadlinesScalarFieldEnum = {
  id: 'id',
  structure_id: 'structure_id',
  eaeu_employee_family_member_card_extension_request_id: 'eaeu_employee_family_member_card_extension_request_id',
  deadline: 'deadline',
  is_active: 'is_active',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Eaeu_employee_family_member_card_extension_requestsScalarFieldEnum = {
  id: 'id',
  eaeu_employee_family_member_id: 'eaeu_employee_family_member_id',
  ms_card_id: 'ms_card_id',
  comment: 'comment',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Eaeu_employee_family_member_card_recovery_requestsScalarFieldEnum = {
  id: 'id',
  eaeu_employee_family_member_id: 'eaeu_employee_family_member_id',
  ms_card_id: 'ms_card_id',
  comment: 'comment',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Eaeu_employee_family_member_deadlinesScalarFieldEnum = {
  id: 'id',
  structure_id: 'structure_id',
  eaeu_employee_family_member_id: 'eaeu_employee_family_member_id',
  deadline: 'deadline',
  is_active: 'is_active',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Eaeu_employee_family_member_filesScalarFieldEnum = {
  id: 'id',
  eaeu_employee_family_member_id: 'eaeu_employee_family_member_id',
  type: 'type',
  path: 'path',
  active: 'active'
};

exports.Prisma.Eaeu_employee_family_member_update_logsScalarFieldEnum = {
  id: 'id',
  eaeu_employee_family_member_id: 'eaeu_employee_family_member_id',
  data: 'data',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Eaeu_employee_family_membersScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  status: 'status',
  ms_employee_id: 'ms_employee_id',
  ms_from_id: 'ms_from_id',
  ms_to_id: 'ms_to_id',
  first_name_am: 'first_name_am',
  last_name_am: 'last_name_am',
  patronymic_am: 'patronymic_am',
  first_name_en: 'first_name_en',
  last_name_en: 'last_name_en',
  patronymic_en: 'patronymic_en',
  first_name_ru: 'first_name_ru',
  last_name_ru: 'last_name_ru',
  patronymic_ru: 'patronymic_ru',
  email: 'email',
  citizenship_id: 'citizenship_id',
  birthday_year: 'birthday_year',
  birthday_month: 'birthday_month',
  birthday_day: 'birthday_day',
  gender_id: 'gender_id',
  passport_number: 'passport_number',
  passport_issued: 'passport_issued',
  passport_valid: 'passport_valid',
  ssn: 'ssn',
  actual_address: 'actual_address',
  address: 'address',
  family_member_id: 'family_member_id',
  needs_certificate: 'needs_certificate',
  created_at: 'created_at',
  updated_at: 'updated_at',
  telephone: 'telephone'
};

exports.Prisma.Eaeu_employee_filesScalarFieldEnum = {
  id: 'id',
  eaeu_employee_id: 'eaeu_employee_id',
  type: 'type',
  path: 'path',
  active: 'active'
};

exports.Prisma.Eaeu_employee_update_logsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  eaeu_employee_id: 'eaeu_employee_id',
  data: 'data',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Eaeu_employeesScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  status: 'status',
  ms_employee_id: 'ms_employee_id',
  ms_from_id: 'ms_from_id',
  ms_to_id: 'ms_to_id',
  citizenship_id: 'citizenship_id',
  birthday_year: 'birthday_year',
  birthday_month: 'birthday_month',
  birthday_day: 'birthday_day',
  agreement_start_date: 'agreement_start_date',
  agreement_end_date: 'agreement_end_date',
  needs_certificate: 'needs_certificate',
  passport_number: 'passport_number',
  passport_issued: 'passport_issued',
  passport_valid: 'passport_valid',
  actual_address: 'actual_address',
  address: 'address'
};

exports.Prisma.Education_levelsScalarFieldEnum = {
  id: 'id',
  name_am: 'name_am',
  name_en: 'name_en',
  name_ru: 'name_ru'
};

exports.Prisma.Ejbc_request_logScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  card_id: 'card_id',
  response_status: 'response_status',
  response_body: 'response_body',
  create_pki: 'create_pki',
  revoke_pki: 'revoke_pki',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Employee_card_extension_request_deadlinesScalarFieldEnum = {
  id: 'id',
  structure_id: 'structure_id',
  employee_card_extension_request_id: 'employee_card_extension_request_id',
  deadline: 'deadline',
  is_active: 'is_active',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Employee_card_extension_requestsScalarFieldEnum = {
  id: 'id',
  employee_id: 'employee_id',
  ms_card_id: 'ms_card_id',
  vacancy_id: 'vacancy_id',
  in_progress_vacancy_id: 'in_progress_vacancy_id',
  comment: 'comment',
  status: 'status',
  nss_answered: 'nss_answered',
  police_answered: 'police_answered',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Employee_card_recovery_requestsScalarFieldEnum = {
  id: 'id',
  employee_id: 'employee_id',
  ms_card_id: 'ms_card_id',
  payment_file: 'payment_file',
  comment: 'comment',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Employee_filesScalarFieldEnum = {
  id: 'id',
  employee_id: 'employee_id',
  type: 'type',
  path: 'path',
  active: 'active'
};

exports.Prisma.Employee_ssn_requestsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  employee_id: 'employee_id',
  claim_id: 'claim_id',
  vacancy_id: 'vacancy_id',
  in_progress_vacancy_id: 'in_progress_vacancy_id',
  ssn: 'ssn',
  ssn_document: 'ssn_document',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Employee_update_logsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  employee_id: 'employee_id',
  vacancy_id: 'vacancy_id',
  in_progress_vacancy_id: 'in_progress_vacancy_id',
  data: 'data',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.EmployeesScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  birthday_year: 'birthday_year',
  birthday_month: 'birthday_month',
  birthday_day: 'birthday_day',
  citizenship_id: 'citizenship_id',
  actual_country_id: 'actual_country_id',
  full_address: 'full_address',
  education_level_id: 'education_level_id',
  payment_done: 'payment_done',
  no_payment: 'no_payment',
  no_payment_comment: 'no_payment_comment',
  passport_number: 'passport_number',
  passport_issued: 'passport_issued',
  passport_valid: 'passport_valid',
  created_at: 'created_at',
  updated_at: 'updated_at',
  status: 'status'
};

exports.Prisma.Excepted_professionsScalarFieldEnum = {
  id: 'id',
  name_am: 'name_am',
  name_en: 'name_en',
  name_ru: 'name_ru',
  structure_id: 'structure_id',
  needs_conclusion: 'needs_conclusion',
  is_active: 'is_active',
  resident_permit: 'resident_permit'
};

exports.Prisma.Exception_certification_documentsScalarFieldEnum = {
  id: 'id',
  vacancy_id: 'vacancy_id',
  document: 'document'
};

exports.Prisma.Failed_jobsScalarFieldEnum = {
  id: 'id',
  uuid: 'uuid',
  connection: 'connection',
  queue: 'queue',
  payload: 'payload',
  exception: 'exception',
  failed_at: 'failed_at'
};

exports.Prisma.Family_membersScalarFieldEnum = {
  id: 'id',
  name_en: 'name_en',
  name_am: 'name_am',
  name_ru: 'name_ru',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Fine_commentsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  fine_id: 'fine_id',
  comment: 'comment',
  path: 'path',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Fine_logsScalarFieldEnum = {
  id: 'id',
  fine_id: 'fine_id',
  user_id: 'user_id',
  from_status: 'from_status',
  to_status: 'to_status',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.FinesScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  claim_id: 'claim_id',
  employee_id: 'employee_id',
  eaeu_employee_id: 'eaeu_employee_id',
  eaeu_employee_family_member_id: 'eaeu_employee_family_member_id',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Found_arm_citizensScalarFieldEnum = {
  id: 'id',
  employee_id: 'employee_id',
  eaeu_employee_id: 'eaeu_employee_id',
  eaeu_employee_family_member_id: 'eaeu_employee_family_member_id',
  ssn: 'ssn',
  citizenship: 'citizenship',
  document_number: 'document_number',
  nationality_name: 'nationality_name',
  first_name: 'first_name',
  last_name: 'last_name',
  passport_issuance_date: 'passport_issuance_date',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Frequently_asked_questionsScalarFieldEnum = {
  id: 'id',
  question_am: 'question_am',
  question_en: 'question_en',
  question_ru: 'question_ru',
  answer_am: 'answer_am',
  answer_en: 'answer_en',
  answer_ru: 'answer_ru',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.GendersScalarFieldEnum = {
  id: 'id',
  name_en: 'name_en',
  name_am: 'name_am',
  name_ru: 'name_ru',
  code_en: 'code_en',
  code_am: 'code_am',
  code_ru: 'code_ru',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.HolidaysScalarFieldEnum = {
  id: 'id',
  date: 'date',
  is_day_off: 'is_day_off'
};

exports.Prisma.Ic_request_logsScalarFieldEnum = {
  id: 'id',
  employee_id: 'employee_id',
  eaeu_employee_id: 'eaeu_employee_id',
  eaeu_employee_family_member_id: 'eaeu_employee_family_member_id',
  request: 'request',
  response: 'response',
  judged: 'judged',
  in_investigation: 'in_investigation',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.In_progress_vacanciesScalarFieldEnum = {
  id: 'id',
  company_id: 'company_id',
  user_id: 'user_id',
  employee_id: 'employee_id',
  ms_employee_id: 'ms_employee_id',
  ms_from_id: 'ms_from_id',
  ms_to_id: 'ms_to_id',
  status: 'status',
  title: 'title',
  position_code_id: 'position_code_id',
  agreement_start_date: 'agreement_start_date',
  agreement_end_date: 'agreement_end_date',
  work_permit_issue_date: 'work_permit_issue_date',
  work_permit_number: 'work_permit_number',
  work_permit_photo: 'work_permit_photo',
  needs_status: 'needs_status',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.In_progress_vacancy_deadlinesScalarFieldEnum = {
  id: 'id',
  structure_id: 'structure_id',
  in_progress_vacancy_id: 'in_progress_vacancy_id',
  deadline: 'deadline',
  is_active: 'is_active',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.In_progress_vacancy_employee_opinionsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  structure_id: 'structure_id',
  in_progress_vacancy_id: 'in_progress_vacancy_id',
  status: 'status',
  path: 'path',
  comment: 'comment',
  created_at: 'created_at',
  updated_at: 'updated_at',
  is_card_extension: 'is_card_extension'
};

exports.Prisma.In_progress_vacancy_status_logsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  structure_id: 'structure_id',
  in_progress_vacancy_id: 'in_progress_vacancy_id',
  action: 'action',
  from: 'from',
  to: 'to',
  path: 'path',
  comment: 'comment',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.InspectedScalarFieldEnum = {
  id: 'id',
  claim_id: 'claim_id',
  inspected_by: 'inspected_by',
  comment: 'comment',
  result: 'result',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Job_complexitiesScalarFieldEnum = {
  id: 'id',
  name_am: 'name_am',
  name_en: 'name_en',
  name_ru: 'name_ru'
};

exports.Prisma.Job_termsScalarFieldEnum = {
  id: 'id',
  name_am: 'name_am',
  name_en: 'name_en',
  name_ru: 'name_ru'
};

exports.Prisma.Legal_typesScalarFieldEnum = {
  id: 'id',
  type_am: 'type_am',
  type_en: 'type_en',
  type_ru: 'type_ru',
  long_type_am: 'long_type_am',
  long_type_en: 'long_type_en',
  long_type_ru: 'long_type_ru'
};

exports.Prisma.MigrationsScalarFieldEnum = {
  id: 'id',
  migration: 'migration',
  batch: 'batch'
};

exports.Prisma.Ms_card_receiptsScalarFieldEnum = {
  id: 'id',
  ms_card_id: 'ms_card_id',
  ms_employee_id: 'ms_employee_id',
  signature_path: 'signature_path',
  receipt_path: 'receipt_path',
  receipt_type: 'receipt_type',
  gender_id: 'gender_id',
  receipt_first_name_am: 'receipt_first_name_am',
  receipt_last_name_am: 'receipt_last_name_am',
  receipt_first_name_other: 'receipt_first_name_other',
  receipt_last_name_other: 'receipt_last_name_other',
  ssn: 'ssn',
  docnum: 'docnum',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Ms_cardsScalarFieldEnum = {
  id: 'id',
  claim_id: 'claim_id',
  sub_claim_id: 'sub_claim_id',
  serial_number: 'serial_number',
  employee_id: 'employee_id',
  eaeu_employee_id: 'eaeu_employee_id',
  eaeu_employee_family_member_id: 'eaeu_employee_family_member_id',
  type: 'type',
  status: 'status',
  issue_date: 'issue_date',
  expire_date: 'expire_date',
  card_photo: 'card_photo',
  printed_at: 'printed_at',
  transferred_at: 'transferred_at',
  created_at: 'created_at',
  updated_at: 'updated_at',
  not_wp_foreigner_id: 'not_wp_foreigner_id',
  not_check_generate: 'not_check_generate'
};

exports.Prisma.Ms_day_offsScalarFieldEnum = {
  id: 'id',
  ms_employee_id: 'ms_employee_id',
  start: 'start',
  end: 'end'
};

exports.Prisma.Ms_employeesScalarFieldEnum = {
  id: 'id',
  position: 'position',
  position_name_en: 'position_name_en',
  position_name_ru: 'position_name_ru',
  position_name_am: 'position_name_am',
  user_id: 'user_id',
  substitute_id: 'substitute_id'
};

exports.Prisma.Ms_logsScalarFieldEnum = {
  id: 'id',
  claim_id: 'claim_id',
  entity: 'entity',
  entity_id: 'entity_id',
  from: 'from',
  to: 'to',
  action: 'action',
  document: 'document',
  send_number: 'send_number',
  comment: 'comment',
  type: 'type',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Ms_request_cancel_commentsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  ms_request_id: 'ms_request_id',
  comment: 'comment'
};

exports.Prisma.Ms_request_messagesScalarFieldEnum = {
  id: 'id',
  ms_request_id: 'ms_request_id',
  user_id: 'user_id',
  sender_type: 'sender_type',
  sender_id: 'sender_id',
  recipient_type: 'recipient_type',
  recipient_id: 'recipient_id',
  document_path: 'document_path',
  comment: 'comment',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Ms_requestsScalarFieldEnum = {
  id: 'id',
  claim_id: 'claim_id',
  user_id: 'user_id',
  structure_id: 'structure_id',
  vacancy_id: 'vacancy_id',
  fine_id: 'fine_id',
  ms_request_id: 'ms_request_id',
  recipient_type: 'recipient_type',
  recipient_id: 'recipient_id',
  type: 'type',
  status: 'status',
  seen: 'seen',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.NewsScalarFieldEnum = {
  id: 'id',
  title_am: 'title_am',
  title_en: 'title_en',
  title_ru: 'title_ru',
  text_am: 'text_am',
  text_en: 'text_en',
  text_ru: 'text_ru',
  views: 'views',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.News_imagesScalarFieldEnum = {
  id: 'id',
  news_id: 'news_id',
  path: 'path'
};

exports.Prisma.Not_wp_foreignersScalarFieldEnum = {
  id: 'id',
  ssn: 'ssn',
  first_name_am: 'first_name_am',
  last_name_am: 'last_name_am',
  patronymic_am: 'patronymic_am',
  first_name_en: 'first_name_en',
  last_name_en: 'last_name_en',
  patronymic_en: 'patronymic_en',
  birth_date: 'birth_date',
  gender_id: 'gender_id',
  citizenship_id: 'citizenship_id',
  info_from_sect: 'info_from_sect',
  passport: 'passport',
  email: 'email',
  notified: 'notified',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.NotificationsScalarFieldEnum = {
  id: 'id',
  type: 'type',
  notifiable_type: 'notifiable_type',
  notifiable_id: 'notifiable_id',
  data: 'data',
  read_at: 'read_at',
  seen_at: 'seen_at',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.Passive_eaeu_employee_family_membersScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  active_eaeu_employee_family_member_id: 'active_eaeu_employee_family_member_id',
  status: 'status',
  ms_employee_id: 'ms_employee_id',
  ms_from_id: 'ms_from_id',
  ms_to_id: 'ms_to_id',
  first_name_am: 'first_name_am',
  last_name_am: 'last_name_am',
  patronymic_am: 'patronymic_am',
  first_name_en: 'first_name_en',
  last_name_en: 'last_name_en',
  patronymic_en: 'patronymic_en',
  first_name_ru: 'first_name_ru',
  last_name_ru: 'last_name_ru',
  patronymic_ru: 'patronymic_ru',
  email: 'email',
  citizenship_id: 'citizenship_id',
  birthday_year: 'birthday_year',
  birthday_month: 'birthday_month',
  birthday_day: 'birthday_day',
  gender_id: 'gender_id',
  passport_number: 'passport_number',
  passport_issued: 'passport_issued',
  passport_valid: 'passport_valid',
  passport_img: 'passport_img',
  ssn: 'ssn',
  actual_address: 'actual_address',
  address: 'address',
  family_member_id: 'family_member_id',
  needs_certificate: 'needs_certificate',
  telephone: 'telephone',
  passive_created_at: 'passive_created_at',
  passive_updated_at: 'passive_updated_at',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Personal_access_tokensScalarFieldEnum = {
  id: 'id',
  tokenable_type: 'tokenable_type',
  tokenable_id: 'tokenable_id',
  name: 'name',
  token: 'token',
  abilities: 'abilities',
  last_used_at: 'last_used_at',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Position_codesScalarFieldEnum = {
  id: 'id',
  code: 'code',
  occupation_classifier_code: 'occupation_classifier_code',
  min_education_level_id: 'min_education_level_id',
  profession_type: 'profession_type',
  name_am: 'name_am',
  name_en: 'name_en',
  name_ru: 'name_ru',
  terms_codes: 'terms_codes',
  education_codes: 'education_codes',
  complexity_codes: 'complexity_codes'
};

exports.Prisma.RolesScalarFieldEnum = {
  id: 'id',
  structure_id: 'structure_id',
  name_am: 'name_am',
  name_en: 'name_en',
  name_ru: 'name_ru'
};

exports.Prisma.Sekt_crossing_infosScalarFieldEnum = {
  id: 'id',
  sekt_request_id: 'sekt_request_id',
  name: 'name',
  surname: 'surname',
  passport_number: 'passport_number',
  direction: 'direction',
  birth_date: 'birth_date',
  status: 'status',
  date: 'date',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Sekt_request_logsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  sekt_request_id: 'sekt_request_id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  administrative_responsibility: 'administrative_responsibility'
};

exports.Prisma.Sekt_requestsScalarFieldEnum = {
  id: 'id',
  employee_id: 'employee_id',
  eaeu_employee_id: 'eaeu_employee_id',
  eaeu_employee_family_member_id: 'eaeu_employee_family_member_id',
  administrative_responsibility: 'administrative_responsibility',
  answer: 'answer',
  created_at: 'created_at',
  updated_at: 'updated_at',
  user_id: 'user_id'
};

exports.Prisma.Sekt_visa_infosScalarFieldEnum = {
  id: 'id',
  sekt_request_id: 'sekt_request_id',
  number: 'number',
  type: 'type',
  allowed_days: 'allowed_days',
  valid_from: 'valid_from',
  valid_to: 'valid_to',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SpheresScalarFieldEnum = {
  id: 'id',
  name: 'name',
  tin: 'tin',
  sphere_code: 'sphere_code',
  sphere_text: 'sphere_text',
  is_checked: 'is_checked',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.StructuresScalarFieldEnum = {
  id: 'id',
  name: 'name',
  name_ru: 'name_ru',
  name_en: 'name_en'
};

exports.Prisma.Structures_tokensScalarFieldEnum = {
  id: 'id',
  structure_id: 'structure_id',
  token: 'token',
  is_active: 'is_active'
};

exports.Prisma.Sub_claim_filesScalarFieldEnum = {
  id: 'id',
  sub_claim_id: 'sub_claim_id',
  user_id: 'user_id',
  type: 'type',
  path: 'path',
  active: 'active',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Sub_claim_status_logsScalarFieldEnum = {
  id: 'id',
  sub_claim_id: 'sub_claim_id',
  user_id: 'user_id',
  structure_id: 'structure_id',
  from: 'from',
  to: 'to',
  comment: 'comment',
  from_cancel: 'from_cancel',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Sub_claimsScalarFieldEnum = {
  id: 'id',
  claim_id: 'claim_id',
  sub_claim_id: 'sub_claim_id',
  user_id: 'user_id',
  employee_id: 'employee_id',
  eaeu_employee_id: 'eaeu_employee_id',
  eaeu_employee_family_member_id: 'eaeu_employee_family_member_id',
  type: 'type',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at',
  data: 'data',
  comment: 'comment'
};

exports.Prisma.Tax_requestsScalarFieldEnum = {
  id: 'id',
  claim_id: 'claim_id',
  employee_id: 'employee_id',
  eaeu_employee_id: 'eaeu_employee_id',
  tin: 'tin',
  answer: 'answer',
  last_date: 'last_date',
  salary: 'salary',
  tax: 'tax',
  social_payments: 'social_payments',
  social_payments_paid: 'social_payments_paid',
  working_hours: 'working_hours',
  civil_low_contract_payments: 'civil_low_contract_payments',
  created_at: 'created_at',
  updated_at: 'updated_at',
  worked_cron_date: 'worked_cron_date'
};

exports.Prisma.Terminate_arm_citizen_logsScalarFieldEnum = {
  id: 'id',
  employee_id: 'employee_id',
  eaeu_employee_id: 'eaeu_employee_id',
  eaeu_employee_family_member_id: 'eaeu_employee_family_member_id',
  data: 'data',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.User_verificationsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  verification_user_id: 'verification_user_id',
  old_email: 'old_email',
  email: 'email',
  type: 'type',
  hash: 'hash',
  verified_at: 'verified_at',
  created_at: 'created_at',
  updated_at: 'updated_at',
  document: 'document'
};

exports.Prisma.UsersScalarFieldEnum = {
  id: 'id',
  role_id: 'role_id',
  department_id: 'department_id',
  first_name_am: 'first_name_am',
  last_name_am: 'last_name_am',
  email: 'email',
  ssn: 'ssn',
  patronymic_am: 'patronymic_am',
  first_name_en: 'first_name_en',
  last_name_en: 'last_name_en',
  patronymic_en: 'patronymic_en',
  first_name_ru: 'first_name_ru',
  last_name_ru: 'last_name_ru',
  patronymic_ru: 'patronymic_ru',
  email_verified_at: 'email_verified_at',
  last_active_at: 'last_active_at',
  password: 'password',
  remember_token: 'remember_token',
  deleted_at: 'deleted_at',
  created_at: 'created_at',
  updated_at: 'updated_at',
  gender_id: 'gender_id',
  telephone: 'telephone',
  email_notifications_confirmed_at: 'email_notifications_confirmed_at'
};

exports.Prisma.VacanciesScalarFieldEnum = {
  id: 'id',
  company_id: 'company_id',
  user_id: 'user_id',
  employee_id: 'employee_id',
  parent_id: 'parent_id',
  ms_employee_id: 'ms_employee_id',
  ms_from_id: 'ms_from_id',
  ms_to_id: 'ms_to_id',
  status: 'status',
  type: 'type',
  excepted_profession_id: 'excepted_profession_id',
  title: 'title',
  position_code_id: 'position_code_id',
  agreement_start_date: 'agreement_start_date',
  agreement_end_date: 'agreement_end_date',
  job_responsibilities: 'job_responsibilities',
  salary: 'salary',
  salary_text: 'salary_text',
  weekly_hours: 'weekly_hours',
  address: 'address',
  education_level_id: 'education_level_id',
  job_requirements: 'job_requirements',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Vacancy_deadlinesScalarFieldEnum = {
  id: 'id',
  structure_id: 'structure_id',
  company_id: 'company_id',
  vacancy_id: 'vacancy_id',
  deadline: 'deadline',
  is_active: 'is_active',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Vacancy_employee_opinionsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  structure_id: 'structure_id',
  vacancy_id: 'vacancy_id',
  status: 'status',
  path: 'path',
  comment: 'comment',
  is_card_extension: 'is_card_extension',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Vacancy_filesScalarFieldEnum = {
  id: 'id',
  vacancy_id: 'vacancy_id',
  type: 'type',
  path: 'path',
  active: 'active'
};

exports.Prisma.Vacancy_status_logsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  structure_id: 'structure_id',
  vacancy_id: 'vacancy_id',
  action: 'action',
  from: 'from',
  to: 'to',
  path: 'path',
  comment: 'comment',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Vacancy_update_logsScalarFieldEnum = {
  id: 'id',
  vacancy_id: 'vacancy_id',
  employee_id: 'employee_id',
  ms_request_id: 'ms_request_id',
  user_id: 'user_id',
  data: 'data',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Volunteer_filesScalarFieldEnum = {
  id: 'id',
  vacancy_id: 'vacancy_id',
  type: 'type',
  path: 'path',
  active: 'active',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.check_historiesOrderByRelevanceFieldEnum = {
  comment: 'comment',
  deport_decision_number: 'deport_decision_number',
  deport_decision_document_path: 'deport_decision_document_path'
};

exports.Prisma.claim_filesOrderByRelevanceFieldEnum = {
  type: 'type',
  path: 'path'
};

exports.Prisma.claim_status_logsOrderByRelevanceFieldEnum = {
  from: 'from',
  to: 'to',
  comment: 'comment'
};

exports.Prisma.claimsOrderByRelevanceFieldEnum = {
  type: 'type',
  flag: 'flag',
  status: 'status'
};

exports.Prisma.companiesOrderByRelevanceFieldEnum = {
  tin: 'tin',
  name: 'name',
  address: 'address',
  actual_address: 'actual_address',
  email: 'email',
  telephone: 'telephone'
};

exports.Prisma.company_info_logsOrderByRelevanceFieldEnum = {
  data: 'data'
};

exports.Prisma.confidant_invitationsOrderByRelevanceFieldEnum = {
  email: 'email'
};

exports.Prisma.contact_us_contentsOrderByRelevanceFieldEnum = {
  telephone: 'telephone',
  email: 'email',
  longitude: 'longitude',
  latitude: 'latitude',
  support_text_am: 'support_text_am',
  support_text_en: 'support_text_en',
  support_text_ru: 'support_text_ru',
  address_am: 'address_am',
  address_en: 'address_en',
  address_ru: 'address_ru',
  facebook_url: 'facebook_url',
  youtube_url: 'youtube_url',
  linkedin_url: 'linkedin_url'
};

exports.Prisma.countriesOrderByRelevanceFieldEnum = {
  name_en: 'name_en',
  name_am: 'name_am',
  name_ru: 'name_ru',
  alpha_2: 'alpha_2',
  alpha_3: 'alpha_3',
  arm_short: 'arm_short',
  abbreviation_eng: 'abbreviation_eng',
  abbreviation_arm: 'abbreviation_arm',
  abbreviation_ru: 'abbreviation_ru',
  full_name_en: 'full_name_en',
  full_name_am: 'full_name_am',
  full_name_ru: 'full_name_ru'
};

exports.Prisma.department_logsOrderByRelevanceFieldEnum = {
  status: 'status',
  path: 'path',
  comment: 'comment'
};

exports.Prisma.departmentsOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.eaeu_employee_card_extension_requestsOrderByRelevanceFieldEnum = {
  comment: 'comment'
};

exports.Prisma.eaeu_employee_card_recovery_requestsOrderByRelevanceFieldEnum = {
  comment: 'comment'
};

exports.Prisma.eaeu_employee_family_member_card_extension_requestsOrderByRelevanceFieldEnum = {
  comment: 'comment'
};

exports.Prisma.eaeu_employee_family_member_card_recovery_requestsOrderByRelevanceFieldEnum = {
  comment: 'comment'
};

exports.Prisma.eaeu_employee_family_member_filesOrderByRelevanceFieldEnum = {
  type: 'type',
  path: 'path'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.eaeu_employee_family_membersOrderByRelevanceFieldEnum = {
  status: 'status',
  first_name_am: 'first_name_am',
  last_name_am: 'last_name_am',
  patronymic_am: 'patronymic_am',
  first_name_en: 'first_name_en',
  last_name_en: 'last_name_en',
  patronymic_en: 'patronymic_en',
  first_name_ru: 'first_name_ru',
  last_name_ru: 'last_name_ru',
  patronymic_ru: 'patronymic_ru',
  email: 'email',
  birthday_year: 'birthday_year',
  birthday_month: 'birthday_month',
  birthday_day: 'birthday_day',
  passport_number: 'passport_number',
  ssn: 'ssn',
  actual_address: 'actual_address',
  address: 'address',
  telephone: 'telephone'
};

exports.Prisma.eaeu_employee_filesOrderByRelevanceFieldEnum = {
  type: 'type',
  path: 'path'
};

exports.Prisma.eaeu_employeesOrderByRelevanceFieldEnum = {
  status: 'status',
  birthday_year: 'birthday_year',
  birthday_month: 'birthday_month',
  birthday_day: 'birthday_day',
  agreement_end_date: 'agreement_end_date',
  passport_number: 'passport_number',
  actual_address: 'actual_address',
  address: 'address'
};

exports.Prisma.education_levelsOrderByRelevanceFieldEnum = {
  name_am: 'name_am',
  name_en: 'name_en',
  name_ru: 'name_ru'
};

exports.Prisma.ejbc_request_logOrderByRelevanceFieldEnum = {
  response_body: 'response_body'
};

exports.Prisma.employee_card_extension_requestsOrderByRelevanceFieldEnum = {
  comment: 'comment'
};

exports.Prisma.employee_card_recovery_requestsOrderByRelevanceFieldEnum = {
  payment_file: 'payment_file',
  comment: 'comment'
};

exports.Prisma.employee_filesOrderByRelevanceFieldEnum = {
  type: 'type',
  path: 'path'
};

exports.Prisma.employee_ssn_requestsOrderByRelevanceFieldEnum = {
  ssn: 'ssn',
  ssn_document: 'ssn_document'
};

exports.Prisma.employeesOrderByRelevanceFieldEnum = {
  birthday_year: 'birthday_year',
  birthday_month: 'birthday_month',
  birthday_day: 'birthday_day',
  full_address: 'full_address',
  no_payment_comment: 'no_payment_comment',
  passport_number: 'passport_number',
  status: 'status'
};

exports.Prisma.excepted_professionsOrderByRelevanceFieldEnum = {
  name_am: 'name_am',
  name_en: 'name_en',
  name_ru: 'name_ru'
};

exports.Prisma.exception_certification_documentsOrderByRelevanceFieldEnum = {
  document: 'document'
};

exports.Prisma.failed_jobsOrderByRelevanceFieldEnum = {
  uuid: 'uuid',
  connection: 'connection',
  queue: 'queue',
  payload: 'payload',
  exception: 'exception'
};

exports.Prisma.family_membersOrderByRelevanceFieldEnum = {
  name_en: 'name_en',
  name_am: 'name_am',
  name_ru: 'name_ru'
};

exports.Prisma.fine_commentsOrderByRelevanceFieldEnum = {
  comment: 'comment',
  path: 'path'
};

exports.Prisma.fine_logsOrderByRelevanceFieldEnum = {
  from_status: 'from_status',
  to_status: 'to_status'
};

exports.Prisma.finesOrderByRelevanceFieldEnum = {
  status: 'status'
};

exports.Prisma.found_arm_citizensOrderByRelevanceFieldEnum = {
  ssn: 'ssn',
  citizenship: 'citizenship',
  document_number: 'document_number',
  nationality_name: 'nationality_name',
  first_name: 'first_name',
  last_name: 'last_name'
};

exports.Prisma.frequently_asked_questionsOrderByRelevanceFieldEnum = {
  question_am: 'question_am',
  question_en: 'question_en',
  question_ru: 'question_ru',
  answer_am: 'answer_am',
  answer_en: 'answer_en',
  answer_ru: 'answer_ru'
};

exports.Prisma.gendersOrderByRelevanceFieldEnum = {
  name_en: 'name_en',
  name_am: 'name_am',
  name_ru: 'name_ru',
  code_en: 'code_en',
  code_am: 'code_am',
  code_ru: 'code_ru'
};

exports.Prisma.ic_request_logsOrderByRelevanceFieldEnum = {
  request: 'request',
  response: 'response'
};

exports.Prisma.in_progress_vacanciesOrderByRelevanceFieldEnum = {
  title: 'title',
  work_permit_number: 'work_permit_number',
  work_permit_photo: 'work_permit_photo'
};

exports.Prisma.in_progress_vacancy_employee_opinionsOrderByRelevanceFieldEnum = {
  path: 'path',
  comment: 'comment'
};

exports.Prisma.in_progress_vacancy_status_logsOrderByRelevanceFieldEnum = {
  action: 'action',
  from: 'from',
  to: 'to',
  path: 'path',
  comment: 'comment'
};

exports.Prisma.inspectedOrderByRelevanceFieldEnum = {
  inspected_by: 'inspected_by',
  comment: 'comment',
  result: 'result'
};

exports.Prisma.job_complexitiesOrderByRelevanceFieldEnum = {
  name_am: 'name_am',
  name_en: 'name_en',
  name_ru: 'name_ru'
};

exports.Prisma.job_termsOrderByRelevanceFieldEnum = {
  name_am: 'name_am',
  name_en: 'name_en',
  name_ru: 'name_ru'
};

exports.Prisma.legal_typesOrderByRelevanceFieldEnum = {
  type_am: 'type_am',
  type_en: 'type_en',
  type_ru: 'type_ru',
  long_type_am: 'long_type_am',
  long_type_en: 'long_type_en',
  long_type_ru: 'long_type_ru'
};

exports.Prisma.migrationsOrderByRelevanceFieldEnum = {
  migration: 'migration'
};

exports.Prisma.ms_card_receiptsOrderByRelevanceFieldEnum = {
  signature_path: 'signature_path',
  receipt_path: 'receipt_path',
  receipt_first_name_am: 'receipt_first_name_am',
  receipt_last_name_am: 'receipt_last_name_am',
  receipt_first_name_other: 'receipt_first_name_other',
  receipt_last_name_other: 'receipt_last_name_other',
  ssn: 'ssn',
  docnum: 'docnum'
};

exports.Prisma.ms_cardsOrderByRelevanceFieldEnum = {
  serial_number: 'serial_number',
  type: 'type',
  card_photo: 'card_photo'
};

exports.Prisma.ms_employeesOrderByRelevanceFieldEnum = {
  position: 'position',
  position_name_en: 'position_name_en',
  position_name_ru: 'position_name_ru',
  position_name_am: 'position_name_am'
};

exports.Prisma.ms_logsOrderByRelevanceFieldEnum = {
  entity: 'entity',
  action: 'action',
  document: 'document',
  send_number: 'send_number',
  comment: 'comment'
};

exports.Prisma.ms_request_cancel_commentsOrderByRelevanceFieldEnum = {
  comment: 'comment'
};

exports.Prisma.ms_request_messagesOrderByRelevanceFieldEnum = {
  sender_type: 'sender_type',
  recipient_type: 'recipient_type',
  document_path: 'document_path',
  comment: 'comment'
};

exports.Prisma.ms_requestsOrderByRelevanceFieldEnum = {
  recipient_type: 'recipient_type',
  type: 'type'
};

exports.Prisma.newsOrderByRelevanceFieldEnum = {
  title_am: 'title_am',
  title_en: 'title_en',
  title_ru: 'title_ru',
  text_am: 'text_am',
  text_en: 'text_en',
  text_ru: 'text_ru'
};

exports.Prisma.news_imagesOrderByRelevanceFieldEnum = {
  path: 'path'
};

exports.Prisma.not_wp_foreignersOrderByRelevanceFieldEnum = {
  ssn: 'ssn',
  first_name_am: 'first_name_am',
  last_name_am: 'last_name_am',
  patronymic_am: 'patronymic_am',
  first_name_en: 'first_name_en',
  last_name_en: 'last_name_en',
  patronymic_en: 'patronymic_en',
  birth_date: 'birth_date',
  passport: 'passport',
  email: 'email'
};

exports.Prisma.notificationsOrderByRelevanceFieldEnum = {
  id: 'id',
  type: 'type',
  notifiable_type: 'notifiable_type',
  data: 'data'
};

exports.Prisma.passive_eaeu_employee_family_membersOrderByRelevanceFieldEnum = {
  status: 'status',
  first_name_am: 'first_name_am',
  last_name_am: 'last_name_am',
  patronymic_am: 'patronymic_am',
  first_name_en: 'first_name_en',
  last_name_en: 'last_name_en',
  patronymic_en: 'patronymic_en',
  first_name_ru: 'first_name_ru',
  last_name_ru: 'last_name_ru',
  patronymic_ru: 'patronymic_ru',
  email: 'email',
  birthday_year: 'birthday_year',
  birthday_month: 'birthday_month',
  birthday_day: 'birthday_day',
  passport_number: 'passport_number',
  passport_img: 'passport_img',
  ssn: 'ssn',
  actual_address: 'actual_address',
  address: 'address',
  telephone: 'telephone'
};

exports.Prisma.personal_access_tokensOrderByRelevanceFieldEnum = {
  tokenable_type: 'tokenable_type',
  name: 'name',
  token: 'token',
  abilities: 'abilities'
};

exports.Prisma.position_codesOrderByRelevanceFieldEnum = {
  code: 'code',
  occupation_classifier_code: 'occupation_classifier_code',
  name_am: 'name_am',
  name_en: 'name_en',
  name_ru: 'name_ru',
  terms_codes: 'terms_codes',
  education_codes: 'education_codes',
  complexity_codes: 'complexity_codes'
};

exports.Prisma.rolesOrderByRelevanceFieldEnum = {
  name_am: 'name_am',
  name_en: 'name_en',
  name_ru: 'name_ru'
};

exports.Prisma.sekt_crossing_infosOrderByRelevanceFieldEnum = {
  name: 'name',
  surname: 'surname',
  passport_number: 'passport_number',
  status: 'status'
};

exports.Prisma.sekt_requestsOrderByRelevanceFieldEnum = {
  answer: 'answer'
};

exports.Prisma.sekt_visa_infosOrderByRelevanceFieldEnum = {
  number: 'number',
  type: 'type',
  status: 'status'
};

exports.Prisma.spheresOrderByRelevanceFieldEnum = {
  name: 'name',
  tin: 'tin',
  sphere_code: 'sphere_code',
  sphere_text: 'sphere_text'
};

exports.Prisma.structuresOrderByRelevanceFieldEnum = {
  name: 'name',
  name_ru: 'name_ru',
  name_en: 'name_en'
};

exports.Prisma.structures_tokensOrderByRelevanceFieldEnum = {
  token: 'token'
};

exports.Prisma.sub_claim_filesOrderByRelevanceFieldEnum = {
  type: 'type',
  path: 'path'
};

exports.Prisma.sub_claim_status_logsOrderByRelevanceFieldEnum = {
  from: 'from',
  to: 'to',
  comment: 'comment'
};

exports.Prisma.sub_claimsOrderByRelevanceFieldEnum = {
  type: 'type',
  status: 'status',
  comment: 'comment'
};

exports.Prisma.tax_requestsOrderByRelevanceFieldEnum = {
  tin: 'tin',
  answer: 'answer',
  last_date: 'last_date',
  salary: 'salary',
  tax: 'tax',
  social_payments: 'social_payments',
  social_payments_paid: 'social_payments_paid',
  working_hours: 'working_hours',
  civil_low_contract_payments: 'civil_low_contract_payments'
};

exports.Prisma.terminate_arm_citizen_logsOrderByRelevanceFieldEnum = {
  data: 'data'
};

exports.Prisma.user_verificationsOrderByRelevanceFieldEnum = {
  old_email: 'old_email',
  email: 'email',
  type: 'type',
  hash: 'hash',
  document: 'document'
};

exports.Prisma.usersOrderByRelevanceFieldEnum = {
  first_name_am: 'first_name_am',
  last_name_am: 'last_name_am',
  email: 'email',
  ssn: 'ssn',
  patronymic_am: 'patronymic_am',
  first_name_en: 'first_name_en',
  last_name_en: 'last_name_en',
  patronymic_en: 'patronymic_en',
  first_name_ru: 'first_name_ru',
  last_name_ru: 'last_name_ru',
  patronymic_ru: 'patronymic_ru',
  password: 'password',
  remember_token: 'remember_token',
  telephone: 'telephone'
};

exports.Prisma.vacanciesOrderByRelevanceFieldEnum = {
  title: 'title',
  job_responsibilities: 'job_responsibilities',
  salary_text: 'salary_text',
  address: 'address',
  job_requirements: 'job_requirements'
};

exports.Prisma.vacancy_employee_opinionsOrderByRelevanceFieldEnum = {
  path: 'path',
  comment: 'comment'
};

exports.Prisma.vacancy_filesOrderByRelevanceFieldEnum = {
  type: 'type',
  path: 'path'
};

exports.Prisma.vacancy_status_logsOrderByRelevanceFieldEnum = {
  action: 'action',
  from: 'from',
  to: 'to',
  path: 'path',
  comment: 'comment'
};

exports.Prisma.volunteer_filesOrderByRelevanceFieldEnum = {
  type: 'type',
  path: 'path'
};
exports.companies_type = exports.$Enums.companies_type = {
  legal_person: 'legal_person',
  independent_taxpayer: 'independent_taxpayer'
};

exports.confidant_invitations_status = exports.$Enums.confidant_invitations_status = {
  pending: 'pending',
  accepted: 'accepted',
  canceled: 'canceled'
};

exports.eaeu_employee_card_extension_requests_status = exports.$Enums.eaeu_employee_card_extension_requests_status = {
  pending: 'pending',
  pending_ms: 'pending_ms',
  allowed: 'allowed',
  rejected: 'rejected',
  canceled: 'canceled'
};

exports.eaeu_employee_card_recovery_requests_status = exports.$Enums.eaeu_employee_card_recovery_requests_status = {
  pending: 'pending',
  allowed: 'allowed',
  rejected: 'rejected',
  canceled: 'canceled'
};

exports.eaeu_employee_connect_family_members_from = exports.$Enums.eaeu_employee_connect_family_members_from = {
  register: 'register',
  add_family_member: 'add_family_member'
};

exports.eaeu_employee_family_member_card_extension_requests_status = exports.$Enums.eaeu_employee_family_member_card_extension_requests_status = {
  pending: 'pending',
  pending_ms: 'pending_ms',
  allowed: 'allowed',
  rejected: 'rejected',
  canceled: 'canceled'
};

exports.eaeu_employee_family_member_card_recovery_requests_status = exports.$Enums.eaeu_employee_family_member_card_recovery_requests_status = {
  pending: 'pending',
  allowed: 'allowed',
  rejected: 'rejected',
  canceled: 'canceled'
};

exports.employee_card_extension_requests_status = exports.$Enums.employee_card_extension_requests_status = {
  pending: 'pending',
  pending_ms: 'pending_ms',
  allowed: 'allowed',
  rejected: 'rejected',
  canceled: 'canceled'
};

exports.employee_card_recovery_requests_status = exports.$Enums.employee_card_recovery_requests_status = {
  pending: 'pending',
  allowed: 'allowed',
  rejected: 'rejected',
  canceled: 'canceled'
};

exports.employee_ssn_requests_status = exports.$Enums.employee_ssn_requests_status = {
  pending: 'pending',
  provided: 'provided'
};

exports.in_progress_vacancies_status = exports.$Enums.in_progress_vacancies_status = {
  pending_foreigner: 'pending_foreigner',
  pending: 'pending',
  pending_ms: 'pending_ms',
  allowed: 'allowed',
  finished: 'finished',
  paused: 'paused'
};

exports.in_progress_vacancy_employee_opinions_status = exports.$Enums.in_progress_vacancy_employee_opinions_status = {
  allowed: 'allowed',
  rejected: 'rejected'
};

exports.ms_card_receipts_receipt_type = exports.$Enums.ms_card_receipts_receipt_type = {
  owner: 'owner',
  confident: 'confident',
  applicant: 'applicant'
};

exports.ms_cards_status = exports.$Enums.ms_cards_status = {
  active: 'active',
  suspended: 'suspended'
};

exports.ms_requests_status = exports.$Enums.ms_requests_status = {
  pending_ms: 'pending_ms',
  pending_user: 'pending_user',
  rejected: 'rejected',
  closed: 'closed'
};

exports.sekt_crossing_infos_direction = exports.$Enums.sekt_crossing_infos_direction = {
  IN: 'IN',
  OUT: 'OUT'
};

exports.vacancies_status = exports.$Enums.vacancies_status = {
  pending_am: 'pending_am',
  pending_foreigner: 'pending_foreigner',
  pending: 'pending',
  pending_ms: 'pending_ms',
  allowed: 'allowed',
  finished: 'finished',
  paused: 'paused'
};

exports.vacancy_employee_opinions_status = exports.$Enums.vacancy_employee_opinions_status = {
  allowed: 'allowed',
  rejected: 'rejected'
};

exports.Prisma.ModelName = {
  check_histories: 'check_histories',
  claim_deadlines: 'claim_deadlines',
  claim_files: 'claim_files',
  claim_status_logs: 'claim_status_logs',
  claims: 'claims',
  companies: 'companies',
  company_info_logs: 'company_info_logs',
  confidant_invitations: 'confidant_invitations',
  contact_us_contents: 'contact_us_contents',
  countries: 'countries',
  department_logs: 'department_logs',
  departments: 'departments',
  eaeu_employee_card_extension_request_deadlines: 'eaeu_employee_card_extension_request_deadlines',
  eaeu_employee_card_extension_requests: 'eaeu_employee_card_extension_requests',
  eaeu_employee_card_recovery_requests: 'eaeu_employee_card_recovery_requests',
  eaeu_employee_connect_family_members: 'eaeu_employee_connect_family_members',
  eaeu_employee_deadlines: 'eaeu_employee_deadlines',
  eaeu_employee_family_member_card_extension_request_deadlines: 'eaeu_employee_family_member_card_extension_request_deadlines',
  eaeu_employee_family_member_card_extension_requests: 'eaeu_employee_family_member_card_extension_requests',
  eaeu_employee_family_member_card_recovery_requests: 'eaeu_employee_family_member_card_recovery_requests',
  eaeu_employee_family_member_deadlines: 'eaeu_employee_family_member_deadlines',
  eaeu_employee_family_member_files: 'eaeu_employee_family_member_files',
  eaeu_employee_family_member_update_logs: 'eaeu_employee_family_member_update_logs',
  eaeu_employee_family_members: 'eaeu_employee_family_members',
  eaeu_employee_files: 'eaeu_employee_files',
  eaeu_employee_update_logs: 'eaeu_employee_update_logs',
  eaeu_employees: 'eaeu_employees',
  education_levels: 'education_levels',
  ejbc_request_log: 'ejbc_request_log',
  employee_card_extension_request_deadlines: 'employee_card_extension_request_deadlines',
  employee_card_extension_requests: 'employee_card_extension_requests',
  employee_card_recovery_requests: 'employee_card_recovery_requests',
  employee_files: 'employee_files',
  employee_ssn_requests: 'employee_ssn_requests',
  employee_update_logs: 'employee_update_logs',
  employees: 'employees',
  excepted_professions: 'excepted_professions',
  exception_certification_documents: 'exception_certification_documents',
  failed_jobs: 'failed_jobs',
  family_members: 'family_members',
  fine_comments: 'fine_comments',
  fine_logs: 'fine_logs',
  fines: 'fines',
  found_arm_citizens: 'found_arm_citizens',
  frequently_asked_questions: 'frequently_asked_questions',
  genders: 'genders',
  holidays: 'holidays',
  ic_request_logs: 'ic_request_logs',
  in_progress_vacancies: 'in_progress_vacancies',
  in_progress_vacancy_deadlines: 'in_progress_vacancy_deadlines',
  in_progress_vacancy_employee_opinions: 'in_progress_vacancy_employee_opinions',
  in_progress_vacancy_status_logs: 'in_progress_vacancy_status_logs',
  inspected: 'inspected',
  job_complexities: 'job_complexities',
  job_terms: 'job_terms',
  legal_types: 'legal_types',
  migrations: 'migrations',
  ms_card_receipts: 'ms_card_receipts',
  ms_cards: 'ms_cards',
  ms_day_offs: 'ms_day_offs',
  ms_employees: 'ms_employees',
  ms_logs: 'ms_logs',
  ms_request_cancel_comments: 'ms_request_cancel_comments',
  ms_request_messages: 'ms_request_messages',
  ms_requests: 'ms_requests',
  news: 'news',
  news_images: 'news_images',
  not_wp_foreigners: 'not_wp_foreigners',
  notifications: 'notifications',
  passive_eaeu_employee_family_members: 'passive_eaeu_employee_family_members',
  personal_access_tokens: 'personal_access_tokens',
  position_codes: 'position_codes',
  roles: 'roles',
  sekt_crossing_infos: 'sekt_crossing_infos',
  sekt_request_logs: 'sekt_request_logs',
  sekt_requests: 'sekt_requests',
  sekt_visa_infos: 'sekt_visa_infos',
  spheres: 'spheres',
  structures: 'structures',
  structures_tokens: 'structures_tokens',
  sub_claim_files: 'sub_claim_files',
  sub_claim_status_logs: 'sub_claim_status_logs',
  sub_claims: 'sub_claims',
  tax_requests: 'tax_requests',
  terminate_arm_citizen_logs: 'terminate_arm_citizen_logs',
  user_verifications: 'user_verifications',
  users: 'users',
  vacancies: 'vacancies',
  vacancy_deadlines: 'vacancy_deadlines',
  vacancy_employee_opinions: 'vacancy_employee_opinions',
  vacancy_files: 'vacancy_files',
  vacancy_status_logs: 'vacancy_status_logs',
  vacancy_update_logs: 'vacancy_update_logs',
  volunteer_files: 'volunteer_files'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
